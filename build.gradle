plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {

	maven { url = "https://api.modrinth.com/maven/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://ueaj.dev/maven/" }

	maven {
		url = "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
		allowInsecureProtocol = true
	}

}

dependencies {

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// ARRP. This is for generating a runtime resource pack (conditionally, as well)
	modImplementation "net.devtech:arrp:${project.arrp_version}"
	include "net.devtech:arrp:${project.arrp_version}"

	// UI library
	modImplementation("maven.modrinth:obsidianui:${project.obsidianui_version}-fabric")

	// architectury-api required at runtime for obsidianui
	modLocalRuntime "curse.maven:architectury-419699:${project.architectury_version}"

	// Mod Menu because config screen access from another place
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/enhancedblockentities.accesswidener")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}
